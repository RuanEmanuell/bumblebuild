generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PasswordRecoveryToken { 
  id         String   @id @default(uuid())
  token      String   @unique
  user       User     @relation(fields: [userId], references: [id]) 
  userId     Int     
  createdAt  DateTime @default(now())
  expiredAt  DateTime 
}

model User { 
  id                 Int      @id @default(autoincrement())
  userType           String   
  name               String   
  email              String   @unique
  password           String   
  status             Boolean  @default(true)
  profilePictureUrl  String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  passwordRecoveryTokens PasswordRecoveryToken[] 
}

model Part { 
  id          Int           @id @default(autoincrement())
  name        String    
  brand       String    
  price       Float     
  type        PartType  
  imageUrl    String?   
  priceLink   String?  
  createdAt   DateTime      @default(now())

  cpu         CPU?          @relation(name: "CPUToPart") 
  gpu         GPU?          @relation(name: "GPUToPart") 
  ram         RAM?          @relation(name: "RAMToPart") 
  ssd         SSD?          @relation(name: "SSDToPart")
  psu         PSU?          @relation(name: "PSUToPart") 
  case        Case?         @relation(name: "CaseToPart")
  motherboard Motherboard?  @relation(name: "MotherboardToPart") 
  cooler      Cooler?       @relation(name: "CoolerToPart")
}

enum PartType { 
  CPU
  GPU
  RAM
  SSD
  PSU
  CASE           
  MOTHERBOARD   
  COOLER
}

model CPU { 
  id                 Int     @id
  name               String
  socket             String
  line               String
  cores              Int     
  threads            Int
  frequency          Float   
  tdp                Int
  integratedGraphics Boolean 
  part               Part    @relation(name: "CPUToPart", fields: [id], references: [id])
}

model GPU {
  id          Int    @id
  memoryGB    Int
  memoryType  String
  tdp         Int
  lengthMM    Float
  part        Part  @relation(name: "GPUToPart", fields: [id], references: [id])
}

model RAM {
  id           Int    @id
  capacityGB Int
  type         String
  frequency   Int
  part         Part   @relation(name: "RAMToPart", fields: [id], references: [id])
}

model SSD {
  id           Int    @id
  capacityGB   Int
  type         String
  readMBs      Int   
  writeMBs     Int    
  part         Part   @relation(name: "SSDToPart", fields: [id], references: [id])
}

model PSU { 
  id            Int     @id
  powerW        Int     
  certification String  
  modular       Boolean
  part          Part    @relation(name: "PSUToPart", fields: [id], references: [id]) 
}

model Case {
  id               Int     @id
  supportedSizes   String
  maxGpuLengthMM   Int
  part             Part    @relation(name: "CaseToPart", fields: [id], references: [id])
}

model Cooler {
  id            Int    @id
  type          String
  socketSupport String
  part          Part   @relation(name: "CoolerToPart", fields: [id], references: [id])
}

model Motherboard {
  id                   Int     @id
  name                 String
  socket               String
  chipset              String
  ramType              String
  slots                Int
  maxRAM               Int
  size                 String
  cpuCompatibilityLine String

  part     Part        @relation(name: "MotherboardToPart", fields: [id], references: [id])
}


